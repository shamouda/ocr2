****************************
** Open Community Runtime **
****************************
 

*************************
** Directory structure **
*************************

    - build/
        Build directory for OCR
    - doc/
        Destination for Doxygen (ocr.dox) output
    - examples/
        Example code and mini-tutorial of OCR
    - inc/
        user-level ocr api header files
    - install/
        Installed libraries will go here
    - jenkins/
        Automatic regression testing support
    - machine-configs/
        OCR configuration files for various platforms
    - scripts/
        OCR support scripts (profilers, visualizers)
    - spec/
        OCR specification
    - src/
        OCR implementation source code
    - tests/
        Non-regression tests


*******************************
** Installation instructions **
*******************************

See the 'INSTALL.make' file


******************************
**     Using OCR            **
******************************

This section's instructions requires you have set the
OCR_INSTALL and OCR_TYPE environment variables as described
in the INSTALL.make file.


*** Compiling code

OCR is built as a library your program must link with.
The actual command line may differ on different OS and compilers.

The following command line can be used on a typical Linux X86
distribution with gcc. It generates a binary named 'helloworld'
that links with the OCR library.

	$> gcc -L${OCR_INSTALL}/lib -I${OCR_INSTALL}/include -locr_${OCR_TYPE} -o helloworld helloworld.c


*** Running code

OCR needs a runtime configuration file that describes how
the runtime must be layed out for the particular machine it
is executed on.

A default configuration file and some examples are provided
under ${OCR_INSTALL}/config

The configuration file can be given to the runtime either
through the OCR_CONFIG environment variable or through the
command line parameter -ocr:cfg <filename>

Note: command line parameters always override values defined
in environment variables.

Using environment variable options:

	$> OCR_CONFIG=<filename>; ./helloworld

Using command line options:

	$> ./helloworld -ocr:cfg <filename>

>To get a list of available OCR options:

	$> ./helloworld -ocr:help


******************************
** Testing the distribution **
******************************

*** Non-regression tests

The 'tests' folder contains a collection of non-regression tests.
After installing and setting the OCR_INSTALL environment variable, one can
run non-regression tests running the 'ocrTests' script.

*** Examples

All examples in the 'examples' directory contain a README indicating how they
can be run. The Makefiles included in those directories will properly build and
setup OCR, link it with the application and run the application

*******************
** Documentation **
*******************

To generate documentation, type 'doxygen ocr.dox'. HTML documentation will be
generated in doc/html and LaTeX documentation in doc/latex. A PDF can be generated
from the LaTeX documentation by typing 'make' in that directory
